spring:
  datasource:
    username: root
    password: 20001023yzl
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/lostandfound?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&rewriteBatchedStatements=true&allowPublicKeyRetrieval=true&zeroDateTimeBehavior=convertToNull
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      #SpringBoot 默认是不注入这些属性值的，需要自己绑定
      initialsize: 5
      minIdle: 5
      maxActive: 20
      maxwait: 60000
      validationQuery: SELECT 1 FROM DUAL
      testwhileidle: true
      testonBorrow: false
      testonReturn: false
      poolPreparedstatements: true
      # 配置监控统计拦藏的filters，stat:监控统计、Log4j:日志记录、waLL:防御sqL注入
      #如果允许时报错java.Lang.ClassNotFoundException: org.apache.Log4j .Priority
      #则导入log4j依赖即可 Maven地址: https://mvnrepository.com/artifact/Log4j/log4j
      #      <dependency>
      #        <groupId>log4j</groupId>
      #        <artifactId>log4j</artifactId>
      #        <version>1.2.17</version>
      #      </dependency>
      filters: stat,wall
      maxPoolPreparedstatementPerConnectionsize: 20
      useGlobalDatasourcestat: true
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSq1Millis=500
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
#  security:
#    user:
#      name: admin
#      password: 123456
  application:
    name: LostAndFound
  redis:
    host: localhost
    port: 6379
  thymeleaf:
    #是否开启缓存，开发时可设置为false，默认为true
    cache: false
    #是否检查模板是否存在，默认为true
    check-template: true
    #是否检查模板位置是否存在，默认为true
    check-template-location: true
    #模板文件编码
    encoding: UTF-8
    #模板文件位置，默认为 classpath:/templates/
    prefix: classpath:/templates/
    #Content-Type配置
    servlet.content-type: text/html
    #模板文件后缀
    suffix: .html


#  spring.mail.username=1551706477@qq.com
#  spring.mail.password=twkdjpmaejnlijaf
#  spring.mail.host=smtp.qq.com
#
#  # 开启加密验证(只有QQ才有)
#  spring.mail.properties.mail.smtp.ssl.enable=true
  mail:
    username: 1551706477@qq.com
    password: twkdjpmaejnlijaf
    host: smtp.qq.com
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          required: false
          ssl:
            enable: true
#  # knife4j配置
#  mvc:
#    pathmatch:
#      matching-strategy: ant_path_matcher
redisson:
  address: redis://localhost:6379

mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.suere.lostandfound.entity
  configuration:
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl
    map-underscore-to-camel-case: true

pagehelper:
  helperDialect: mysql
  # 是否启用分页合理化。
  # 如果启用，当pagenum<1时，会自动查询第一页的数据，当pagenum>pages时，自动查询最后一页数据；
  # 不启用的，以上两种情况都会返回空数据
  reasonable: true
  # 用于从对象或map中根据属性名取值，
  # 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值，
  # 默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero
  params: count=countSql

  # 默认值false，分页插件会从查询方法的参数值中，自动根据 params 配置的字段中取值，查找到合适的值时就会自动分页。
  supportMethodsArguments: true

logging:
  #  config: classpath:logback-spring.xml
  level:
    dao: debug
    org:
      mybatis: debug
management:
  endpoints:
    web:
      exposure:
        include: '*'

minio:
  url: http://127.0.0.1:9000
  region: cn-beijing-suerte
  access-key: minioadmin
  secret-key: minioadmin
  bucket-name: lost-found
  system-platform: windows
  pool:
    max-total: 100
    max-idle: 20
    min-idle: 10
    max-wait-millis: 3000
    block-when-exhausted: true
